<!DOCTYPE html>
<html lang="de">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Zählerstand melden</title>
  <style>
    body {
      background: #effaf0;
      font-family: "Segoe UI", sans-serif;
      padding: 4rem 0;
      margin: 0;
      display: flex;
      flex-direction: column;
      min-height: 100vh;
      align-items: center;
    }

    .container {
      max-width: 540px;
      width: 100%;
      background: white;
      margin: 2rem auto;
      padding: 2.5rem;
      border-radius: 12px;
      box-shadow: 0 2px 18px rgba(0, 0, 0, 0.12);
      box-sizing: border-box;
    }

    .header-bar {
      width: 100%;
      height: 20px;
      background-color: #2ea44f;
      border-radius: 8px 8px 0 0;
    }

    h1 {
      text-align: center;
      margin-bottom: 2rem;
      font-size: 1.6rem;
      color: #17632f;
    }

    label {
      display: block;
      margin-top: 1rem;
      margin-bottom: 0.3rem;
      color: #17632f;
    }

    input {
      width: 100%;
      padding: 0.6rem;
      background: #f1fdf3;
      border: 1px solid #9cddb2;
      border-radius: 4px;
      margin-bottom: 0.5rem;
      font-size: 1rem;
      color: #18472c;
    }

    input:focus {
      border-color: #2ea44f;
      box-shadow: 0 0 0 2px rgba(46, 164, 79, 0.25);
      outline: none;
    }

    button {
      background: #2ea44f;
      color: white;
      border: none;
      padding: 0.7rem 1.2rem;
      border-radius: 4px;
      font-size: 1rem;
      cursor: pointer;
      margin-top: 1rem;
    }

    button:hover {
      background: #228a3a;
    }

    .error-msg {
      color: #c60000;
      font-size: 0.92rem;
      margin: 0.2rem 0 0.8rem;
    }

    #result {
      margin-top: 2rem;
      background: #e3fbe7;
      padding: 1rem;
      border-radius: 6px;
      border: 1px solid #a9e7b8;
      color: #144a2c;
      white-space: pre-wrap;
    }
  </style>
</head>
<body>
  <div class="container">
    <div class="header-bar"></div>
    <h1>Zählerstand melden</h1>
    <form id="meterForm">
      <label for="customerId">Kundennummer</label>
      <input id="customerId" type="text" required />

      <label for="meterId">Zählernummer</label>
      <input id="meterId" type="text" required />

      <label for="reading">Zählerstand</label>
      <input id="reading" type="text" required />

      <label for="date">Ablesedatum</label>
      <input id="date" type="date" required />

      <button type="submit">Absenden</button>
    </form>
    <div id="result"></div>
  </div>

  <script>
    function showError(fieldId, message) {
      const field = document.getElementById(fieldId);
      const error = document.createElement('div');
      error.className = 'error-msg';
      error.textContent = message;
      field.parentNode.insertBefore(error, field.nextSibling);
    }

    document.getElementById('meterForm').addEventListener('submit', function (e) {
      e.preventDefault();
      document.querySelectorAll('.error-msg').forEach(el => el.remove());

      const customerId = document.getElementById('customerId').value.trim();
      const meterId = document.getElementById('meterId').value.trim();
      const reading = document.getElementById('reading').value.trim();
      const date = document.getElementById('date').value;

      let valid = true;

      if (!/^\d{6,10}$/.test(customerId)) {
        showError('customerId', 'Bitte 6–10 Ziffern eingeben.');
        valid = false;
      }
      if (!/^\d{5,7}$/.test(meterId)) {
        showError('meterId', 'Bitte 5–7 Ziffern eingeben.');
        valid = false;
      }
      if (!/^\d+(\.\d{1,2})?$/.test(reading)) {
        showError('reading', 'Nur Zahlen, Dezimalpunkt erlaubt (max. 2 Nachkommastellen).');
        valid = false;
      }
      if (date === "") {
        showError('date', 'Bitte ein Datum wählen.');
        valid = false;
      }

      if (!valid) return;

      const payload = new URLSearchParams();
      payload.append('customerId', customerId);
      payload.append('meterId', meterId);
      payload.append('reading', reading);
      payload.append('date', date);

      fetch('http://itvdev054.dresden-it.de/falkus/index.php', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/x-www-form-urlencoded'
        },
        body: payload
      })
      .then(response => response.text())
      .then(data => {
        document.getElementById('result').innerHTML = `
          ✅ <strong>Erfolg:</strong><br>${data}
        `;
        document.getElementById('meterForm').reset();
      })
      .catch(error => {
        document.getElementById('result').innerHTML = `
          ❌ <strong>Fehler:</strong><br>Die Übermittlung ist fehlgeschlagen. Bitte später erneut versuchen.
        `;
      });
    });
  </script>
</body>
</html>
